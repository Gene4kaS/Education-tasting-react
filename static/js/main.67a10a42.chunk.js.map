{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.js","components/Filter.js","App.js","index.js"],"names":["Controls","onIncrement","onDecrement","className","type","onClick","Counter","state","value","props","initialValue","handleIncrement","setState","prevState","handleDecrement","this","Component","defaultProps","Dropdown","visible","toggle","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","classNames","options","label","map","color","style","backgroundColor","TodoList","todos","onDeleteTodo","onToggleCompleted","id","text","completed","checked","onChange","TodoEditor","message","handleChange","e","currentTarget","handleSubmit","preventDefault","onSubmit","Filter","colorPickerOptions","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","visibleTodos","completedTodoCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"usBAaeA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,YAAhB,OACf,sBAAKC,UAAU,oBAAf,UACE,wBAAQC,KAAK,SAASC,QAASJ,EAA/B,mFAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,uFCHEI,G,kNASJC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,c,EAGpBC,gBAAkB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAOK,EAAUL,MAAQ,O,EAI7BM,gBAAkB,WAChB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAOK,EAAUL,MAAQ,O,4CAI7B,WACE,OACE,sBAAKL,UAAU,UAAf,UACE,sBAAMA,UAAU,iBAAhB,SAAkCY,KAAKR,MAAMC,QAC7C,cAAC,EAAD,CACEP,YAAac,KAAKJ,gBAClBT,YAAaa,KAAKD,yB,GA/BNE,cAAhBV,EACGW,aAAe,CACpBP,aAAc,GAoCHJ,QCvCTY,G,kNACJX,MAAQ,CACNY,SAAS,G,EAGXC,OAAS,WACP,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BM,SAAUN,EAAUM,a,4CAIxB,WACE,IAAQA,EAAYJ,KAAKR,MAAjBY,QAER,OACE,sBAAKhB,UAAU,WAAf,UACE,wBACEC,KAAK,SACLD,UAAU,mBACVE,QAASU,KAAKK,OAHhB,SAKGD,EAAU,uCAAW,qDAGvBA,GAAW,qBAAKhB,UAAU,iBAAf,0G,GAxBGa,cA8BRE,I,gBC7BTG,G,kNACJd,MAAQ,CACNe,gBAAiB,G,EAGnBC,aAAe,SAAAC,GACb,EAAKZ,SAAS,CAAEU,gBAAiBE,K,EAGnCC,oBAAsB,SAAAD,GACpB,OAAOE,IAAW,sBAAuB,CACvC,8BAA+BF,IAAU,EAAKjB,MAAMe,mB,4CAYxD,WAAU,IAAD,OACCA,EAAoBP,KAAKR,MAAzBe,gBACAK,EAAYZ,KAAKN,MAAjBkB,QACAC,EAAUD,EAAQL,GAAlBM,MAER,OACE,sBAAKzB,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,0BACA,gGAAiByB,KACjB,8BACGD,EAAQE,KAAI,WAAmBL,GAAnB,IAAGI,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAV,OACX,wBAEE3B,UAAW,EAAKsB,oBAAoBD,GACpCO,MAAO,CAAEC,gBAAiBF,GAC1BzB,QAAS,kBAAM,EAAKkB,aAAaC,KAH5BI,e,GAnCOZ,cA+CXK,ICnBAY,G,MA5BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,kBAAxB,OACf,oBAAIjC,UAAU,WAAd,SACG+B,EAAML,KAAI,gBAAGQ,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACT,qBAEEpC,UAAWuB,IAAW,iBAAkB,CACtC,4BAA6Ba,IAHjC,UAME,uBACEnC,KAAK,WACLD,UAAU,qBACVqC,QAASD,EACTE,SAAU,kBAAML,EAAkBC,MAEpC,mBAAGlC,UAAU,iBAAb,SAA+BmC,IAC/B,wBACElC,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAM8B,EAAaE,IAH9B,0DAZKA,U,QCLPK,G,kNACJnC,MAAQ,CAAEoC,QAAS,I,EAEnBC,aAAe,SAAAC,GACb,EAAKjC,SAAS,CAAE+B,QAASE,EAAEC,cAActC,S,EAG3CuC,aAAe,SAAAF,GACbA,EAAEG,iBACF,EAAKvC,MAAMwC,SAAS,EAAK1C,MAAMoC,SAC/B,EAAK/B,SAAS,CAAE+B,QAAS,M,4CAG3B,WACE,OACE,uBAAMxC,UAAU,aAAa8C,SAAUlC,KAAKgC,aAA5C,UACE,0BACEvC,MAAOO,KAAKR,MAAMoC,QAClBF,SAAU1B,KAAK6B,eAEjB,wBAAQxC,KAAK,SAASD,UAAU,qBAAhC,2E,GApBiBa,cA4BV0B,ICtBAQ,EAPA,SAAC,GAAD,IAAG1C,EAAH,EAAGA,MAAOiC,EAAV,EAAUA,SAAV,OACb,qHAEE,uBAAOrC,KAAK,OAAOI,MAAOA,EAAOiC,SAAUA,QCKzCU,EAAqB,CACzB,CAAEvB,MAAO,MAAOE,MAAO,WACvB,CAAEF,MAAO,QAASE,MAAO,WACzB,CAAEF,MAAO,OAAQE,MAAO,WACxB,CAAEF,MAAO,OAAQE,MAAO,WACxB,CAAEF,MAAO,OAAQE,MAAO,WACxB,CAAEF,MAAO,SAAUE,MAAO,YAGtBsB,E,4MACJ7C,MAAQ,CACN2B,MAAOmB,EACPC,OAAQ,I,EAGVC,QAAU,SAAAjB,GACR,IAAMkB,EAAO,CACXnB,GAAIoB,IAAQC,WACZpB,OACAC,UAAWD,GAEb,EAAK1B,UAAS,gBAAGsB,EAAH,EAAGA,MAAH,MAAgB,CAC5BA,MAAM,CAAEsB,GAAH,mBAAYtB,S,EAIrByB,WAAa,SAAAC,GACX,EAAKhD,UAAS,SAAAC,GAAS,MAAK,CAC1BqB,MAAOrB,EAAUqB,MAAMoB,QAAO,SAAAE,GAAI,OAAIA,EAAKnB,KAAOuB,U,EAItDC,gBAAkB,SAAAD,GAchB,EAAKhD,UAAS,kBAAgB,CAC5BsB,MADY,EAAGA,MACFL,KAAI,SAAA2B,GAAI,OACnBA,EAAKnB,KAAOuB,EAAZ,2BAA0BJ,GAA1B,IAAgCjB,WAAYiB,EAAKjB,YAAciB,U,EAKrEM,aAAe,SAAAjB,GACb,EAAKjC,SAAS,CAAE0C,OAAQT,EAAEC,cAActC,S,EAG1CuD,gBAAkB,WAChB,MAA0B,EAAKxD,MAAvB+C,EAAR,EAAQA,OAAQpB,EAAhB,EAAgBA,MACV8B,EAAmBV,EAAOW,cAEhC,OAAO/B,EAAMoB,QAAO,SAAAE,GAAI,OACtBA,EAAKlB,KAAK2B,cAAcC,SAASF,O,EAIrCG,wBAA0B,WAGxB,OAFkB,EAAK5D,MAAf2B,MAEKkC,QACX,SAACC,EAAOb,GAAR,OAAkBA,EAAKjB,UAAY8B,EAAQ,EAAIA,IAC/C,I,4CAIJ,WACE,MAA0BtD,KAAKR,MAAvB2B,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,OACTgB,EAAiBpC,EAAMqC,OACvBC,EAAezD,KAAKgD,kBACpBU,EAAqB1D,KAAKoD,0BAEhC,OACE,qCACE,qJACA,cAAC,EAAD,CAASzD,aAAc,KACvB,cAAC,EAAD,IACA,cAAC,EAAD,CAAaiB,QAASwB,IACtB,gCACE,iGAAkBmB,KAClB,qIAAwBG,QAG1B,cAAC,EAAD,CAAYxB,SAAUlC,KAAKwC,UAC3B,cAAC,EAAD,CAAQ/C,MAAO8C,EAAQb,SAAU1B,KAAK+C,eAEtC,cAAC,EAAD,CACE5B,MAAOsC,EACPrC,aAAcpB,KAAK4C,WACnBvB,kBAAmBrB,KAAK8C,yB,GAzFhB7C,aAgGHoC,IC/GfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67a10a42.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на 1\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на 1\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React, { Component } from 'react';\nimport Controls from './Controls';\nimport './Counter.css';\n\nclass Counter extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    value: this.props.initialValue,\n  };\n\n  handleIncrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handleDecrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value - 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"Counter\">\n        <span className=\"Counter__value\">{this.state.value}</span>\n        <Controls\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  render() {\n    const { visible } = this.state;\n\n    return (\n      <div className=\"Dropdown\">\n        <button\n          type=\"button\"\n          className=\"Dropdown__toggle\"\n          onClick={this.toggle}\n        >\n          {visible ? 'Скрыть' : 'Показать'}\n        </button>\n\n        {visible && <div className=\"Dropdown__menu\">Выпадающее меню</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import classNames from 'classnames';\nimport React, { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    return classNames('ColorPicker__option', {\n      'ColorPicker__option--active': index === this.state.activeOptionIdx,\n    });\n\n    // const optionClasses = ['ColorPicker__option'];\n\n    // if (index === this.state.activeOptionIdx) {\n    //   optionClasses.push('ColorPicker__option--active');\n    // }\n\n    // return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Выбран цвет: {label}</p>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={this.makeOptionClassName(index)}\n              style={{ backgroundColor: color }}\n              onClick={() => this.setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text, completed }) => (\n      <li\n        key={id}\n        className={classNames('TodoList__item', {\n          'TodoList__item--completed': completed,\n        })}\n      >\n        <input\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className=\"TodoList__text\">{text}</p>\n        <button\n          type=\"button\"\n          className=\"TodoList__btn\"\n          onClick={() => onDeleteTodo(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  state = { message: '' };\n\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.message);\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Сохранить\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Фильтр по имени\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\nimport TodoList from './components/TodoList';\nimport initialTodos from './todos.json';\nimport TodoEditor from './components/TodoEditor';\nimport Filter from './components/Filter';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D8B' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F51B5' },\n];\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: text,\n    };\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  toggleCompleted = todoId => {\n    //   this.setState(prevState => ({\n    //     todos: prevState.todos.map(todo => {\n    //       if (todo.id === todoId) {\n    //         return {\n    //           ...todo,\n    //           completed: !todo.completed,\n    //         };\n    //       }\n    //       return todo;\n    //     }),\n    //   }));\n    // };\n\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const visibleTodos = this.getVisibleTodos();\n    const completedTodoCount = this.calculateCompletedTodos();\n\n    return (\n      <>\n        <h1>Состояние компонента</h1>\n        <Counter initialValue={10} />\n        <Dropdown />\n        <ColorPicker options={colorPickerOptions} />\n        <div>\n          <p>Общее кол-во: {totalTodoCount}</p>\n          <p>Кол-во выполненных: {completedTodoCount}</p>\n        </div>\n\n        <TodoEditor onSubmit={this.addTodo} />\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}